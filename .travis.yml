dist: bionic # needed for KVM
sudo: true
language: minimal

install:
    # Retry installing nix due to nondeterministic error
    #   Fatal error: glibc detected an invalid stdio handle
    # see:
    #   https://github.com/nh2/static-haskell-nix/pull/27#issuecomment-502652181
    #   https://github.com/nixos/nix/issues/2733
  - (for i in {1..5}; do bash <(curl https://nixos.org/nix/install) && exit 0; done; exit 1)
  - . /home/travis/.nix-profile/etc/profile.d/nix.sh
  - if [[ $STABLE == 1 ]]; then export NIX_PATH="nixpkgs=$(nix eval --raw -f pkgs/nixpkgs-pinned.nix nixpkgs)"; fi
  - if [[ $STABLE == 0 ]]; then export NIX_PATH="nixpkgs=$(nix eval --raw -f pkgs/nixpkgs-pinned.nix nixpkgs-unstable)"; fi
  - nix-env -iA cachix -f https://cachix.org/api/v1/install
  - cachix use nix-bitcoin-ci-ea
  - VER="$(nix eval nixpkgs.lib.version)"
env:
  global:
    # CACHIX_SIGNING_KEY
  - secure: "BPboHoJrLm0vXXRyyFdw91AT9kc0wQQ0sZjhBbLKD7mh1WbjBRt4sqYkF5UpbGsj4piVdEAh7Hgaa8FdYcxqv6adr7pa/VK+AKOOahFxr4XKnbt82kW5GmEc/bh+LZfh9v/zPH0rZ/ck5yNyHBSwWRw4gpUhwtZ3kw0yOzJrXC8nbv+I53z2mlMqvHmqcza5XL4j1jKR1iypLbLLNSyn5QR1kpMBgtD/NyIACwQtV1kr52EKeRtgZFfqJs46FEZZLuB568a5dWPUAUILcxuz7hhpIXkK6WWOHIAHwrWrrYtIIDMQKkLe/EWhBK8NJC7YTQwGPKjLxoGA4mfTJhgOPAhEZnmLHo9UpiJahzm9NV/MR/9vNwq46O8oiIJfwrUPECRcK4rKV0T1VZZqB7cXu3yp4nCNP5iZie3TE/nWZrRpU5rdnwEEkGkFhmbZT68DwYLD1hxheYecOMqU0Ml2n0K1QQu44xHtLOcnXUFslUGmfc14G/mLkngzws/5xk5wGeQAmMbtrSC7B13SGuHD1FUcYwNi2Q8x2n6VYJ0evJEN+IhozmbMOkwM0as0QQiQALBduesQcQfnTyIvSFv62nJD8w24Z7x7yW2WE1U6b0dEoexM58wxiEareG0g9cBqdCwBDd2N5upHCa/bt0M0f5YDigrUJAhjlICXiNKmAWQ="
  matrix:
  - TestModules=1 STABLE=1
  - PKG=hwi STABLE=1
  - PKG=lightning-charge STABLE=1
  - PKG=lightning-charge STABLE=0
  - PKG=nanopos STABLE=1
  - PKG=nanopos STABLE=0
  - PKG=spark-wallet STABLE=1
  - PKG=elementsd STABLE=1
  - PKG=elementsd STABLE=0
  - PKG=electrs STABLE=1
  # broken
  # - PKG=electrs STABLE=0
  - PKG=liquid-swap STABLE=1
script:
  - printf '%s (%s)\n' "$NIX_PATH" "$VER"
  - |
    getBuildExpr() {
        if [[ $TestModules ]]; then
            if [[ ! -e /dev/kvm ]]; then
                >&2 echo "No KVM available on VM Host."
                exit 1
            fi
            sudo chmod go+rw /dev/kvm
            test/run-tests.sh exprForCI
        else
            echo "(import ./. {}).$PKG"
        fi
    }
  - buildExpr=$(getBuildExpr)
  - time nix-instantiate -E "$buildExpr" --add-root ./drv --indirect
  - outPath=$(nix-store --query ./drv)
  - |
    if nix path-info --store https://nix-bitcoin-ci-ea.cachix.org $outPath &>/dev/null; then
      echo "$outPath" has already been built successfully.
      travis_terminate 0
    fi
    # Travis doesn't expose secrets to pull-request builds,
    # so skip cache uploading in this case
  - |
    if [[ $CACHIX_SIGNING_KEY ]]; then
      cachix push nix-bitcoin-ci-ea --watch-store &
      watchStorePid=$!
    fi
  - nix-build ./drv
  - |
    if [[ $CACHIX_SIGNING_KEY ]]; then
      # Wait until cachix has finished uploading
      # Run as root because yama/ptrace_scope != 0
      ruby=$(nix-build '<nixpkgs>' -A ruby)/bin/ruby
      time sudo $ruby helper/wait-for-network-idle.rb $watchStorePid
    fi
